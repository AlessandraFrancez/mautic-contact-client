{
  "title": "API Payload",
  "$schema": "api_payload.json",
  "type": "object",
  "format": "grid",
  "options": {
    "disable_collapse": true
  },
  "properties": {
    "operations": {
      "title": "Operations",
      "type": "array",
      "options": {
        "collapsed": false,
        "disable_collapse": true
      },
      "items": {
        "title": "Operation",
        "headerTemplate": "{{ i1 }}) {{ self.name }}",
        "type": "object",
        "properties": {
          "name": {
            "propertyOrder": 10,
            "type": "string",
            "title": "Name",
            "description": "The name of this particular API operation.",
            "default": "Send"
          },
          "description": {
            "propertyOrder": 20,
            "type": "string",
            "title": "Description",
            "description": "Optional description of this API operation.",
            "format": "textarea",
            "options": {
              "wysiwyg": false
            },
            "default": ""
          },
          "request": {
            "title": "Request",
            "propertyOrder": 60,
            "type": "object",
            "options": {
              "collapsed": false,
              "disable_collapse": true
            },
            "properties": {
              "url": {
                "propertyOrder": 10,
                "type": "string",
                "title": "URL",
                "description": "The complete web address we will be communicating with.",
                "default": "",
                "required": true
              },
              "test_url": {
                "propertyOrder": 20,
                "type": "string",
                "title": "Test URL",
                "description": "Optionally specify an alternative URL to communicate with during tests, commonly used for staging/dev environments.",
                "default": ""
              },
              "method": {
                "propertyOrder": 30,
                "type": "string",
                "title": "Method",
                "description": "The method used for this API operation.",
                "default": "post",
                "enumSource": [
                  {
                    "source": [
                      {
                        "value": "get",
                        "title": "GET"
                      },
                      {
                        "value": "post",
                        "title": "POST"
                      },
                      {
                        "value": "put",
                        "title": "PUT"
                      },
                      {
                        "value": "delete",
                        "title": "DELETE"
                      },
                      {
                        "value": "patch",
                        "title": "PATCH"
                      }
                    ],
                    "title": "{{item.title}}",
                    "value": "{{item.value}}"
                  }
                ]
              },
              "format": {
                "propertyOrder": 40,
                "type": "string",
                "title": "Request Format",
                "description": "The method used to format fields to be sent to this endpoint.",
                "default": "form",
                "$ref": "#/definitions/format"
              },
              "headers": {
                "propertyOrder": 50,
                "title": "Request Headers",
                "type": "array",
                "format": "table",
                "options": {
                  "collapsed": false
                },
                "items": {
                  "title": "Header",
                  "$ref": "#/definitions/field"
                }
              },
              "body": {
                "propertyOrder": 60,
                "title": "Request Body",
                "type": "array",
                "format": "table",
                "options": {
                  "collapsed": true
                },
                "items": {
                  "title": "Body Field",
                  "$ref": "#/definitions/field"
                }
              }
            }
          },
          "response": {
            "title": "Response",
            "propertyOrder": 70,
            "type": "object",
            "options": {
              "collapsed": false,
              "disable_collapse": true
            },
            "properties": {
              "format": {
                "propertyOrder": 10,
                "title": "Format",
                "type": "string",
                "description": "The method used to format fields that we will be receiving.",
                "default": "json",
                "$ref": "#/definitions/format"
              },
              "headers": {
                "propertyOrder": 20,
                "title": "Response Headers",
                "type": "array",
                "format": "table",
                "options": {
                  "collapsed": true
                },
                "items": {
                  "title": "Header",
                  "$ref": "#/definitions/field"
                }
              },
              "body": {
                "propertyOrder": 30,
                "title": "Response Body",
                "type": "array",
                "format": "table",
                "options": {
                  "collapsed": true
                },
                "items": {
                  "title": "Body Field",
                  "$ref": "#/definitions/field"
                }
              }
            }
          },
          "success": {
            "propertyOrder": 80,
            "title": "Success Definition",
            "type": "array",
            "options": {
              "collapsed": true
            },
            "items": {
              "type": "object",
              "properties": {
                "title": "Empty Object",
                "description": "This accepts anything, as long as it is valid JSON."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "format": {
      "type": "string",
      "title": "Format",
      "default": "form",
      "enumSource": [
        {
          "source": [
            {
              "value": "text",
              "title": "Raw text"
            },
            {
              "value": "json",
              "title": "JSON"
            },
            {
              "value": "xml",
              "title": "XML"
            },
            {
              "value": "form",
              "title": "Form"
            }
          ],
          "title": "{{item.title}}",
          "value": "{{item.value}}"
        }
      ]
    },
    "field": {
      "title": "Field",
      "headerTemplate": "{{ self.key }}",
      "type": "object",
      "options": {
        "collapsed": false,
        "disable_collapse": false
      },
      "properties": {
        "key": {
          "propertyOrder": 10,
          "type": "string",
          "title": "Key",
          "description": "The name of the field being sent.",
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "value": {
          "propertyOrder": 20,
          "type": "string",
          "title": "Value",
          "description": "The value of the field being sent.",
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "default_value": {
          "propertyOrder": 30,
          "type": "string",
          "title": "Default Value",
          "description": "An optional value that will be used if the value field renders as blank.",
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "test_value": {
          "propertyOrder": 40,
          "type": "string",
          "title": "Test Value",
          "description": "An optional value to override other values during test requests.",
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "test_only": {
          "propertyOrder": 50,
          "type": "boolean",
          "format": "checkbox",
          "title": "Test Only",
          "description": "Set to true to only send this field when running a test.",
          "default": false
        },
        "description": {
          "propertyOrder": 60,
          "type": "string",
          "title": "Description",
          "description": "",
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "required": {
          "propertyOrder": 70,
          "type": "boolean",
          "format": "checkbox",
          "title": "Required",
          "description": "Set to true to prevent sending contacts to this client if this field is empty.",
          "default": false
        }
      }
    }
  }
}