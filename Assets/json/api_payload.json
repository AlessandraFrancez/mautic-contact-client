{
  "title": "API Payload",
  "$schema": "api_payload.json",
  "type": "object",
  "format": "grid",
  "options": {
    "disable_collapse": true
  },
  "properties": {
    "operations": {
      "title": "Operations",
      "type": "array",
      "propertyOrder": 10,
      "options": {
        "collapsed": false,
        "disable_collapse": true
      },
      "items": {
        "title": "API Operation",
        "headerTemplate": "{{ self.name }}",
        "type": "object",
        "format": "grid",
        "options": {
          "collapsed": false,
          "disable_collapse": true
        },
        "properties": {
          "name": {
            "propertyOrder": 10,
            "type": "string",
            "title": "Name",
            "options": {
              "infoText": "The name of this particular API operation."
            },
            "default": ""
          },
          "description": {
            "propertyOrder": 20,
            "type": "string",
            "title": "Description",
            "options": {
              "infoText": "Optional description of this API operation."
            },
            "default": ""
          },
          "request": {
            "title": "Request",
            "propertyOrder": 60,
            "type": "object",
            "format": "grid",
            "options": {
              "collapsed": false,
              "disable_collapse": true
            },
            "properties": {
              "url": {
                "propertyOrder": 10,
                "type": "string",
                "title": "URL",
                "options": {
                  "infoText": "The complete web address we will be communicating with.",
                  "grid_columns": 6,
                  "notBlank": true,
                  "codeMirror": true,
                  "tokenSource": "plugin:mauticContactClient:getTokens",
                  "placeholder": "https://..."
                },
                "default": ""
              },
              "testUrl": {
                "propertyOrder": 20,
                "type": "string",
                "title": "Test URL",
                "options": {
                  "infoText": "Optionally specify an alternative URL to communicate with during tests, commonly used for staging/dev environments.",
                  "codeMirror": true,
                  "tokenSource": "plugin:mauticContactClient:getTokens",
                  "grid_columns": 6
                },
                "default": ""
              },
              "method": {
                "propertyOrder": 30,
                "type": "string",
                "title": "Method",
                "options": {
                  "infoText": "The method used for this API operation.",
                  "grid_columns": 6
                },
                "default": "post",
                "enumSource": [
                  {
                    "source": [
                      {
                        "value": "get",
                        "title": "GET"
                      },
                      {
                        "value": "head",
                        "title": "HEAD"
                      },
                      {
                        "value": "post",
                        "title": "POST"
                      },
                      {
                        "value": "put",
                        "title": "PUT"
                      },
                      {
                        "value": "delete",
                        "title": "DELETE"
                      },
                      {
                        "value": "patch",
                        "title": "PATCH"
                      }
                    ],
                    "title": "{{item.title}}",
                    "value": "{{item.value}}"
                  }
                ]
              },
              "format": {
                "id": "requestFormat",
                "propertyOrder": 40,
                "type": "string",
                "title": "Request Format",
                "options": {
                  "infoText": "The method used to format fields to be sent to this endpoint. This specifies standard headers for you, and the format of fields that are sent.",
                  "grid_columns": 6
                },
                "default": "form",
                "$ref": "#/definitions/requestFormat"
              },
              "headers": {
                "propertyOrder": 50,
                "title": "Headers",
                "type": "array",
                "format": "table",
                "options": {
                  "collapsed": false,
                  "disable_collapse": true,
                  "disable_array_reorder": true
                },
                "items": {
                  "title": "Header",
                  "$ref": "#/definitions/requestField"
                }
              },
              "manual": {
                "propertyOrder": 60,
                "title": "Manual Template",
                "type": "boolean",
                "format": "checkbox",
                "default": false,
                "options": {
                  "infoText": "Manual template mode should only be enabled when a specific/nested structure is required."
                }
              },
              "template": {
                "propertyOrder": 70,
                "title": "Template",
                "type": "string",
                "format": "textarea",
                "options": {
                  "infoText": "Here you can customize the body as a raw string for services that require a specific/nested structure. Keep in mind this must match the Request Format specified above. Use ",
                  "codeMirror": true,
                  "grid_columns": 12,
                  "tokenSource": "plugin:mauticContactClient:getTokens"
                }
              },
              "body": {
                "propertyOrder": 80,
                "title": "Fields",
                "type": "array",
                "format": "table",
                "#uniqueItems": true,
                "items": {
                  "title": "Field",
                  "$ref": "#/definitions/requestField"
                },
                "options": {
                  "collapsed": false,
                  "disable_collapse": true,
                  "disable_array_reorder": true
                }
              }
            }
          },
          "response": {
            "title": "Response",
            "propertyOrder": 70,
            "type": "object",
            "options": {
              "collapsed": false,
              "disable_collapse": true
            },
            "properties": {
              "format": {
                "propertyOrder": 10,
                "title": "Format",
                "type": "string",
                "options": {
                  "infoText": "The method used to format fields that we will be receiving.",
                  "grid_columns": 6
                },
                "$ref": "#/definitions/responseFormat"
              },
              "headers": {
                "propertyOrder": 20,
                "title": "Headers",
                "type": "array",
                "format": "table",
                "options": {
                  "collapsed": false,
                  "disable_collapse": true,
                  "disable_array_reorder": true
                },
                "items": {
                  "title": "Header",
                  "$ref": "#/definitions/responseField"
                }
              },
              "body": {
                "propertyOrder": 30,
                "title": "Fields",
                "type": "array",
                "format": "table",
                "uniqueItems": true,
                "options": {
                  "collapsed": false,
                  "disable_collapse": true,
                  "disable_array_reorder": true
                },
                "items": {
                  "title": "Field",
                  "$ref": "#/definitions/responseField"
                }
              },
              "success": {
                "propertyOrder": 40,
                "title": "Validation",
                "type": "object",
                "options": {
                  "collapsed": false,
                  "disable_collapse": true,
                  "infoText": "Use simple logic to define a successful operation below. Leave blank to consider all operations successful. If the operation is deemed unsuccessful the operation will be aborted and no changes will be made to your contacts."
                },
                "properties": {
                  "definition": {
                    "propertyOrder": 10,
                    "title": "Validation",
                    "type": "string",
                    "format": "textarea",
                    "default": "{\"condition\": \"AND\", \"rules\": [{\"id\": \"status\", \"field\": \"status\", \"type\": \"string\", \"input\": \"select\", \"operator\": \"equal\", \"value\": \"200\"}], \"valid\": true}",
                    "options": {
                      "queryBuilder": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "settings": {
      "title": "Settings",
      "propertyOrder": 20,
      "type": "object",
      "format": "grid",
      "options": {
        "collapsed": false,
        "disable_collapse": true
      },
      "properties": {
        "autoUpdate": {
          "title": "Auto-Update",
          "options": {
            "infoText": "Automatically update the Payload response headers and fields when new ones are discovered."
          },
          "propertyOrder": 10,
          "type": "boolean",
          "format": "checkbox",
          "default": true
        },
        "verify": {
          "title": "Verify SSL",
          "options": {
            "infoText": "If an SSL certificate is used, it will be verified as authentic."
          },
          "propertyOrder": 20,
          "type": "boolean",
          "format": "checkbox",
          "default": false
        },
        "limit": {
          "title": "Rate Limit - To be deprecated!",
          "options": {
            "hidden": true,
            "infoText": "Maximum number of requests we will allow per minute, including failures. To prevent disruption of service with the client and reduce errors."
          },
          "propertyOrder": 20,
          "type": "integer",
          "default": 300,
          "minimum": 1,
          "maximum": 10000
        },
        "timeout": {
          "title": "Timeout",
          "options": {
            "infoText": "Seconds we will wait for any single API request with this client to complete before we abort."
          },
          "propertyOrder": 30,
          "type": "integer",
          "default": 60,
          "minimum": 1,
          "maximum": 300
        },
        "connect_timeout": {
          "title": "Connect Timeout",
          "options": {
            "infoText": "Seconds we will wait for any single API server to respond to a request."
          },
          "propertyOrder": 40,
          "type": "integer",
          "default": 10,
          "minimum": 1,
          "maximum": 30
        },
        "attempts": {
          "title": "Attempts - To be deprecated.",
          "options": {
            "hidden": true,
            "infoText": "Attempts that will be made to send this payload, before aborting due to critical errors or timeouts. Set to 1 to prevent retries."
          },
          "propertyOrder": 50,
          "type": "integer",
          "default": 3,
          "minimum": 1,
          "maximum": 25
        }
      }
    }
  },
  "definitions": {
    "requestFormat": {
      "type": "string",
      "title": "Format",
      "default": "form",
      "enumSource": [
        {
          "source": [
            {
              "value": "form",
              "title": "Form"
            },
            {
              "value": "html",
              "title": "HTML"
            },
            {
              "value": "json",
              "title": "JSON"
            },
            {
              "value": "text",
              "title": "Text"
            },
            {
              "value": "xml",
              "title": "XML"
            },
            {
              "value": "yaml",
              "title": "YAML"
            }
          ],
          "title": "{{item.title}}",
          "value": "{{item.value}}"
        }
      ]
    },
    "responseFormat": {
      "type": "string",
      "title": "Format",
      "default": "auto",
      "enumSource": [
        {
          "source": [
            {
              "value": "auto",
              "title": "Autodetect"
            },
            {
              "value": "html",
              "title": "HTML"
            },
            {
              "value": "json",
              "title": "JSON"
            },
            {
              "value": "text",
              "title": "Text"
            },
            {
              "value": "xml",
              "title": "XML"
            },
            {
              "value": "yaml",
              "title": "YAML"
            }
          ],
          "title": "{{item.title}}",
          "value": "{{item.value}}"
        }
      ]
    },
    "requestField": {
      "title": "Field",
      "headerTemplate": "{{ self.key }}",
      "type": "object",
      "options": {
        "collapsed": false,
        "disable_collapse": false
      },
      "properties": {
        "key": {
          "propertyOrder": 10,
          "type": "string",
          "title": "Key",
          "options": {
            "infoText": "The name of the field being sent."
          },
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "value": {
          "propertyOrder": 20,
          "type": "string",
          "title": "Value",
          "options": {
            "#comment": "These token properties are not standard, and only exist in this plugin.",
            "tokenSource": "plugin:mauticContactClient:getTokens",
            "tokenPlaceholder": "Type a field name...",
            "infoText": "The value of the field being sent.",
            "codeMirror": true
          },
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "default_value": {
          "propertyOrder": 30,
          "type": "string",
          "title": "Default Value",
          "options": {
            "hidden": true,
            "infoText": "An optional value that will be used if the value field renders as blank."
          },
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "test_value": {
          "propertyOrder": 40,
          "type": "string",
          "title": "Test Value",
          "options": {
            "infoText": "An optional value to override other values during test requests."
          },
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "required": {
          "propertyOrder": 50,
          "type": "boolean",
          "format": "checkbox",
          "title": "Required",
          "options": {
            "infoText": "Set to true to prevent sending contacts to this client if this field is empty."
          },
          "default": false
        },
        "overridable": {
          "propertyOrder": 60,
          "type": "boolean",
          "format": "checkbox",
          "title": "Overridable",
          "options": {
            "infoText": "Allow this field to be overridden within a campaign workflow."
          },
          "default": false
        },
        "test_only": {
          "propertyOrder": 70,
          "type": "boolean",
          "format": "checkbox",
          "title": "Test Only",
          "options": {
            "infoText": "Set to true to only send this field when running a test."
          },
          "default": false
        },
        "description": {
          "propertyOrder": 80,
          "type": "string",
          "title": "Description",
          "options": {
            "infoText": ""
          },
          "default": "",
          "minLength": 0,
          "maxLength": 255
        }
      }
    },
    "responseField": {
      "title": "Field",
      "headerTemplate": "{{ self.key }}",
      "type": "object",
      "options": {
        "collapsed": false,
        "disable_collapse": false
      },
      "properties": {
        "key": {
          "propertyOrder": 10,
          "type": "string",
          "title": "Key",
          "options": {
            "infoText": "The name of the field being received."
          },
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "destination": {
          "propertyOrder": 20,
          "type": "string",
          "title": "Destination",
          "format": "select",
          "options": {
            "infoText": "The internal fields to which we should save the value."
          },
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "default_value": {
          "propertyOrder": 30,
          "type": "string",
          "title": "Default Value",
          "options": {
            "hidden": true,
            "infoText": "An optional value that will be saved if the value field renders as blank."
          },
          "default": "",
          "minLength": 0,
          "maxLength": 255
        },
        "example": {
          "propertyOrder": 60,
          "type": "string",
          "title": "Example",
          "options": {
            "readOnly": true,
            "infoText": "An example of what is typically contained in this field (response only)."
          },
          "default": "",
          "minLength": 0,
          "maxLength": 1024
        },
        "description": {
          "propertyOrder": 70,
          "type": "string",
          "title": "Description",
          "options": {
            "infoText": ""
          },
          "default": "",
          "minLength": 0,
          "maxLength": 255
        }
      }
    }
  }
}